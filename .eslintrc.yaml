env:
  es2022: true
extends:
  - eslint:recommended
  - airbnb-base
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:@typescript-eslint/strict
  - prettier
parser: '@typescript-eslint/parser'
parserOptions:
  project: ./tsconfig.json
  sourceType: module
plugins: [simple-import-sort, typescript-sort-keys]
root: true
ignorePatterns: [bin/forks/*/package, build, local]
rules:
  class-methods-use-this: off
  complexity: [error, {max: 10}]
  curly: [error, all]
  default-param-last: off
  dot-notation: off
  import/exports-last: error
  import/extensions: [error, never]
  import/named: error
  import/no-commonjs: error
  import/no-default-export: error
  import/no-deprecated: error
  import/no-duplicates: [error, {prefer-inline: true}]
  import/no-extraneous-dependencies: [error, {devDependencies: false, packageDir: [., ./autotests]}]
  import/no-internal-modules:
    - error
    - allow:
        - '**/constants/internal'
        - '**/context/*'
        - '**/e2ed/*'
        - '**/generators/internal'
        - '**/selectors/internal'
        - '**/types/customPackProperties'
        - '**/types/internal'
        - '**/types/skipTests'
        - '**/utils/*'
  import/no-nodejs-modules:
    - error
    - allow:
        - node:child_process
        - node:crypto
        - node:fs
        - node:fs/promises
        - node:http
        - node:https
        - node:module
        - node:os
        - node:path
        - node:perf_hooks
        - node:querystring
        - node:stream
        - node:url
        - node:util
  import/no-relative-packages: off
  import/no-restricted-paths:
    - error
    - zones:
        - target: './src/!(constants)/**/*'
          from: ./src/constants
          except: [./internal.ts]
        - target: './src/!(types)/**/*'
          from: ./src/types
          except: [./internal.ts]
  import/no-unassigned-import: error
  import/no-unresolved:
    - error
    - {commonjs: true, ignore: [autotests, e2ed/testcafe]}
  import/no-unused-modules:
    - error
    - ignoreExports:
        - autotests/**/index.ts
        - autotests/context/pageCookies.ts
        - autotests/packs/*
        - autotests/tests/**
        - autotests/types/*
        - scripts/*.ts
        - src/*/index.ts
        - src/*/internal.ts
        - src/bin/*.ts
        - src/createLocator.ts
        - src/esm/*.ts
        - src/getModulesGraph.ts
        - src/globby.ts
        - src/index.ts
        - src/testcafe.ts
        - src/types/extends.ts
      missingExports: true
      unusedExports: true
  import/no-useless-path-segments: [error, {commonjs: true, noUselessIndex: true}]
  import/order: off
  import/prefer-default-export: off
  import/unambiguous: error
  no-await-in-loop: off
  no-continue: off
  no-empty: [error, {allowEmptyCatch: true}]
  no-loop-func: off
  no-magic-numbers: off
  no-restricted-syntax:
    - error
    - ExportAllDeclaration
    - ':not(MethodDefinition, Property) > FunctionExpression'
  no-shadow: off
  no-underscore-dangle: [error, {allow: [_onConfigureResponse]}]
  no-useless-constructor: off
  no-use-before-define: off
  no-void: off
  max-depth: [error, {max: 3}]
  max-lines: [error, {max: 120, skipBlankLines: true, skipComments: true}]
  max-lines-per-function: [error, {IIFEs: true, max: 100, skipBlankLines: true, skipComments: true}]
  max-params: off
  max-statements: [error, {max: 25}]
  padding-line-between-statements:
    - error
    - {blankLine: always, prev: class, next: '*'}
    - {blankLine: always, prev: '*', next: class}
    - {blankLine: always, prev: [const, let], next: '*'}
    - {blankLine: always, prev: '*', next: [const, let]}
    - {blankLine: any, prev: [const, let], next: [const, let]}
    - {blankLine: always, prev: block-like, next: '*'}
    - {blankLine: always, prev: '*', next: block-like}
    - {blankLine: always, prev: '*', next: return}
    - {blankLine: always, prev: throw, next: '*'}
    - {blankLine: always, prev: '*', next: throw}
  simple-import-sort/exports: error
  simple-import-sort/imports:
    - error
    - groups:
        - ['^node:']
        - ['^\w']
        - ['^\u0000']
        - ['^\.\./\.\./\.\./\.\./\.\./\.\./\.\.(?!/?$)', '^\.\./\.\./\.\./\.\./\.\./?$']
        - ['^\.\./\.\./\.\./\.\./\.\./\.\.(?!/?$)', '^\.\./\.\./\.\./\.\./?$']
        - ['^\.\./\.\./\.\./\.\.(?!/?$)', '^\.\./\.\./\.\./\.\./?$']
        - ['^\.\./\.\./\.\.(?!/?$)', '^\.\./\.\./\.\./?$']
        - ['^\.\./\.\.(?!/?$)', '^\.\./\.\./?$']
        - ['^\.\.(?!/?$)', '^\.\./?$']
        - ['^\./(?=.*/)(?!/?$)', '^\.(?!/?$)', '^\./?$']
        - ['^\w.*\u0000$']
        - ['^[^.].*\u0000$']
        - ['^\.\./\.\./\.\./\.\./\.\./\.\./.*\u0000$']
        - ['^\.\./\.\./\.\./\.\./\.\./.*\u0000$']
        - ['^\.\./\.\./\.\./\.\./.*\u0000$']
        - ['^\.\./\.\./\.\./.*\u0000$']
        - ['^\.\./\.\./.*\u0000$']
        - ['^\.\./.*\u0000$']
        - ['^\..*\u0000$']
  sort-keys: [error, asc, {caseSensitive: true, natural: false}]
  typescript-sort-keys/string-enum: error
  '@typescript-eslint/adjacent-overload-signatures': error
  '@typescript-eslint/array-type': error
  '@typescript-eslint/ban-types': [error, {extendDefaults: true, types: {'{}': false}}]
  '@typescript-eslint/class-literal-property-style': error
  '@typescript-eslint/consistent-generic-constructors': error
  '@typescript-eslint/consistent-indexed-object-style': error
  '@typescript-eslint/consistent-type-assertions':
    [error, {assertionStyle: as, objectLiteralTypeAssertions: never}]
  '@typescript-eslint/consistent-type-definitions': [error, type]
  '@typescript-eslint/consistent-type-exports': error
  '@typescript-eslint/consistent-type-imports': [error, {disallowTypeAnnotations: false}]
  '@typescript-eslint/default-param-last': error
  '@typescript-eslint/dot-notation': error
  '@typescript-eslint/explicit-function-return-type': [error, {allowExpressions: true}]
  '@typescript-eslint/explicit-member-accessibility': [error, {accessibility: no-public}]
  '@typescript-eslint/explicit-module-boundary-types': error
  '@typescript-eslint/max-params': [error, {max: 3}]
  '@typescript-eslint/member-ordering': [error, {default: {order: alphabetically}}]
  '@typescript-eslint/method-signature-style': error
  '@typescript-eslint/naming-convention':
    - error
    - {selector: default, format: [strictCamelCase, StrictPascalCase], leadingUnderscore: allow}
    - selector: variable
      format: [strictCamelCase, StrictPascalCase, UPPER_CASE]
      leadingUnderscore: allow
    - {selector: typeLike, format: [StrictPascalCase]}
    - {selector: [objectLiteralProperty, typeProperty], format: null, modifiers: [requiresQuotes]}
    - {selector: [classProperty, typeMethod], filter: '^toJSON$', format: null}
  '@typescript-eslint/no-import-type-side-effects': error
  '@typescript-eslint/no-inferrable-types': error
  '@typescript-eslint/no-invalid-void-type':
    [error, {allowInGenericTypeArguments: true, allowAsThisParameter: true}]
  '@typescript-eslint/no-loop-func': error
  '@typescript-eslint/no-magic-numbers':
    - error
    - ignore: [-1, 0, 1, 2, 1024]
      ignoreArrayIndexes: true
      ignoreDefaultValues: true
      ignoreEnums: true
      ignoreNumericLiteralTypes: true
      ignoreReadonlyClassProperties: true
      ignoreTypeIndexes: true
  '@typescript-eslint/no-namespace': [error, {allowDeclarations: true}]
  '@typescript-eslint/no-shadow': error
  '@typescript-eslint/no-unnecessary-boolean-literal-compare': off
  '@typescript-eslint/no-use-before-define': error
  '@typescript-eslint/quotes': [error, single, {avoidEscape: true}]
  '@typescript-eslint/sort-type-constituents': [error, {checkIntersections: false}]
settings:
  import/extensions: [.ts]
  import/resolver: {node: {extensions: [.ts]}}
