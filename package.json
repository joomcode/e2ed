{
  "name": "e2ed",
  "version": "0.11.18",
  "description": "E2E testing framework over TestCafe",
  "keywords": [
    "E2E",
    "TestCafe",
    "testing"
  ],
  "author": "uid11",
  "license": "MIT",
  "bin": {
    "e2ed": "./bin/localEntrypoint.js",
    "e2ed-init": "./bin/init.sh"
  },
  "bugs": "https://github.com/joomcode/e2ed/issues",
  "engines": {
    "node": ">=16.11.1"
  },
  "packageManager": "npm@8",
  "homepage": "https://github.com/joomcode/e2ed#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/joomcode/e2ed"
  },
  "dependencies": {
    "create-test-id": "0.0.5",
    "pngjs": "6.0.0",
    "testcafe-without-typecheck": "1.20.0-rc.1"
  },
  "devDependencies": {
    "@types/node": "18.7.2",
    "@typescript-eslint/eslint-plugin": "5.33.0",
    "@typescript-eslint/parser": "5.33.0",
    "eslint": "8.21.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-simple-import-sort": "7.0.0",
    "husky": "8.0.1",
    "prettier": "2.7.1",
    "testcafe": "1.20.0",
    "typescript": "4.7.4"
  },
  "peerDependencies": {
    "@types/node": ">=16.11.1",
    "bin-v8-flags-filter": ">=1.2.0",
    "typescript": ">=4.4"
  },
  "exports": {
    ".": "./index.js",
    "./actions": "./actions/index.js",
    "./api": "./api/index.js",
    "./configurator": "./configurator.js",
    "./constants": "./constants/index.js",
    "./context": "./context/index.js",
    "./createTestId": "./createTestId.js",
    "./entities": "./entities/index.js",
    "./hooks": "./hooks/index.js",
    "./pageObjects": "./pageObjects/index.js",
    "./pageObjects/components": "./pageObjects/components/index.js",
    "./pageObjects/pages": "./pageObjects/pages/index.js",
    "./routes": "./routes/index.js",
    "./routes/apiRoutes": "./routes/apiRoutes/index.js",
    "./routes/pageRoutes": "./routes/pageRoutes/index.js",
    "./selectors": "./selectors/index.js",
    "./testcafe": {
      "import": "./esm/testcafe.mjs",
      "require": "./testcafe.js"
    },
    "./types": "./types/index.js",
    "./utils": "./utils/index.js",
    "./utils/asserts": "./utils/asserts.js",
    "./utils/E2EDError": "./utils/E2EDError.js"
  },
  "scripts": {
    "precheck:all": "npm run clear:lint:cache && npm run build",
    "check:all": "npm audit && npm run check:testcafe:version && npm run lint && npm test",
    "check:testcafe:version": "node ./build/checkTestCafeVersion.js",
    "clear:lint:cache": "rm -f .lint-cache",
    "lint": "npm run parallel lint:es lint:prettier lint:types",
    "lint:es": "eslint --cache --cache-location=.lint-cache --ext=.ts --max-warnings=0 --report-unused-disable-directives .",
    "lint:prettier": "prettier --check --ignore-path=.gitignore .",
    "lint:types": "tsc --noEmit",
    "make:executable": "./bin/makeExecutable.sh",
    "parallel": "./bin/runParallel.sh",
    "test": "npm run parallel test:docker test:esm test:local",
    "build:clear": "rm -rf ./build",
    "prebuild": "npm run build:clear",
    "build": "tsc; echo 'Compilation done.'",
    "postbuild": "npm run build:rename && npm run build:remove && npm run build:copy && npm run build:esm && npm run build:init",
    "prebuild:rename": "cp -r ./build/out/* ./build",
    "build:rename": "mv ./build/src ./build/node_modules && mv ./build/node_modules/package ./build/node_modules/e2ed",
    "build:remove": "find ./build/node_modules/e2ed/types/ -wholename *.js -exec rm -rf {} \\;",
    "postbuild:remove": "touch ./build/node_modules/e2ed/types/index.js",
    "build:copy": "npm run build:copy:bin && npm run build:copy:scripts && npm run build:copy:meta && npm run build:copy:example",
    "prebuild:copy:bin": "rm -r ./build/node_modules/e2ed/bin/*.d.ts",
    "build:copy:bin": "cp ./bin/init.sh ./bin/dockerEntrypoint.sh ./build/node_modules/e2ed/bin",
    "postbuild:copy:bin": "npm run make:executable build/node_modules/e2ed/bin/localEntrypoint.js build/node_modules/e2ed/bin/runE2edInDockerEnvironment.js",
    "build:copy:scripts": "cp ./build/scripts/*.js ./build",
    "postbuild:copy:scripts": "cp ./scripts/testEsmExports.ts ./build/testEsmExports.mjs",
    "build:copy:meta": "cp -r ./LICENSE ./logo.svg ./README.md ./styles ./build/node_modules/e2ed",
    "postbuild:copy:meta": "node ./build/writePrunedPackageJson.js",
    "prebuild:copy:example": "rm -r ./build/e2ed",
    "build:copy:example": "cp -r ./e2ed ./build/node_modules/e2ed/",
    "postbuild:copy:example": "rm -r ./build/node_modules/e2ed/e2ed/node_modules ./build/node_modules/e2ed/e2ed/tests/internalTypeTests",
    "prebuild:esm": "rm -r ./build/node_modules/e2ed/esm/*",
    "build:esm": "cp ./src/package/esm/testcafe.ts ./build/node_modules/e2ed/esm/testcafe.mjs",
    "build:init": "(cd ./build && ./node_modules/e2ed/bin/init.sh)",
    "postbuild:init": "cp ./src/package/package.json ./build && cp -r ./e2ed/tests/internalTypeTests ./build/e2ed/tests",
    "preversion": "npm run check:all",
    "version": "npm run update:changelog",
    "update:changelog": "node ./build/updateChangelog.js",
    "postupdate:changelog": "prettier --write ./CHANGELOG.md && git add ./CHANGELOG.md",
    "postversion": "git push --follow-tags && npm run release",
    "prerelease": "npm run build",
    "release": "npm publish ./build/node_modules/e2ed",
    "postrelease": "if [ -f ./local/postrelease.sh ]; then ./local/postrelease.sh; else echo 'No postrelease hook'; fi",
    "build:docker": "docker build -t e2ed .",
    "pretest:docker": "npm run build:docker && npm run test:docker:copy",
    "test:docker:copy": "rm -rf ./build/docker && mkdir build/docker && cp -r ./build/e2ed ./build/docker/e2ed",
    "test:docker": "(cd ./build/docker && E2ED_DOCKER_DO_AFTER_TESTS=doAfterTests.sh E2ED_DOCKER_DO_BEFORE_TESTS=doBeforeTests.sh E2ED_CONCURRENCY=2 E2ED_DOCKER_RETRIES=3 E2ED_ORIGIN=https://google.com ./e2ed/bin/runDocker.sh)",
    "test:esm": "node ./build/testEsmExports.mjs",
    "test:local": "(cd ./build && E2ED_ORIGIN=https://google.com ./node_modules/e2ed/bin/localEntrypoint.js)",
    "testcafefork:publish": "./bin/TestCafeFork/publish.sh",
    "testcafefork:clean": "./bin/TestCafeFork/clean.sh",
    "testcafefork:test:install": "./bin/TestCafeFork/testInstall.sh"
  },
  "sideEffects": false,
  "types": "index.d.ts"
}
